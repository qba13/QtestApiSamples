/*
 * qTest Manager API Version 8.6 - 10.5
 * qTest Manager API Version 8.6 - 10.5
 *
 * OpenAPI spec version: 8.6 - 10.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * LinkedDefect
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-03-04T15:34:58.501Z")
public class LinkedDefect {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("pid")
  private String pid = null;

  @SerializedName("link_type")
  private String linkType = null;

  @SerializedName("external_defect_id")
  private String externalDefectId = null;

  @SerializedName("connection_id")
  private Long connectionId = null;

  @SerializedName("external_project_id")
  private String externalProjectId = null;

  @SerializedName("summary")
  private String summary = null;

  @SerializedName("status")
  private String status = null;

  public LinkedDefect id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Defect id
   * @return id
  **/
  @ApiModelProperty(example = "1", value = "Defect id")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public LinkedDefect pid(String pid) {
    this.pid = pid;
    return this;
  }

   /**
   * Defect pid
   * @return pid
  **/
  @ApiModelProperty(example = "MTR-1", value = "Defect pid")
  public String getPid() {
    return pid;
  }

  public void setPid(String pid) {
    this.pid = pid;
  }

  public LinkedDefect linkType(String linkType) {
    this.linkType = linkType;
    return this;
  }

   /**
   * Link type
   * @return linkType
  **/
  @ApiModelProperty(example = "is_associated_with", value = "Link type")
  public String getLinkType() {
    return linkType;
  }

  public void setLinkType(String linkType) {
    this.linkType = linkType;
  }

  public LinkedDefect externalDefectId(String externalDefectId) {
    this.externalDefectId = externalDefectId;
    return this;
  }

   /**
   * External defect id
   * @return externalDefectId
  **/
  @ApiModelProperty(example = "MTR-1", value = "External defect id")
  public String getExternalDefectId() {
    return externalDefectId;
  }

  public void setExternalDefectId(String externalDefectId) {
    this.externalDefectId = externalDefectId;
  }

  public LinkedDefect connectionId(Long connectionId) {
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Defect connection id
   * @return connectionId
  **/
  @ApiModelProperty(example = "1", value = "Defect connection id")
  public Long getConnectionId() {
    return connectionId;
  }

  public void setConnectionId(Long connectionId) {
    this.connectionId = connectionId;
  }

  public LinkedDefect externalProjectId(String externalProjectId) {
    this.externalProjectId = externalProjectId;
    return this;
  }

   /**
   * External project id
   * @return externalProjectId
  **/
  @ApiModelProperty(example = "MTR", value = "External project id")
  public String getExternalProjectId() {
    return externalProjectId;
  }

  public void setExternalProjectId(String externalProjectId) {
    this.externalProjectId = externalProjectId;
  }

  public LinkedDefect summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Defect summary
   * @return summary
  **/
  @ApiModelProperty(example = "Defect summary 1", value = "Defect summary")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public LinkedDefect status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Defect status
   * @return status
  **/
  @ApiModelProperty(example = "New", value = "Defect status")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkedDefect linkedDefect = (LinkedDefect) o;
    return Objects.equals(this.id, linkedDefect.id) &&
        Objects.equals(this.pid, linkedDefect.pid) &&
        Objects.equals(this.linkType, linkedDefect.linkType) &&
        Objects.equals(this.externalDefectId, linkedDefect.externalDefectId) &&
        Objects.equals(this.connectionId, linkedDefect.connectionId) &&
        Objects.equals(this.externalProjectId, linkedDefect.externalProjectId) &&
        Objects.equals(this.summary, linkedDefect.summary) &&
        Objects.equals(this.status, linkedDefect.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, pid, linkType, externalDefectId, connectionId, externalProjectId, summary, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkedDefect {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    linkType: ").append(toIndentedString(linkType)).append("\n");
    sb.append("    externalDefectId: ").append(toIndentedString(externalDefectId)).append("\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    externalProjectId: ").append(toIndentedString(externalProjectId)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

