/*
 * qTest Manager API Version 8.6 - 10.5
 * qTest Manager API Version 8.6 - 10.5
 *
 * OpenAPI spec version: 8.6 - 10.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BuildPermission;
import io.swagger.client.model.DefectPermission;
import io.swagger.client.model.ModulePermission;
import io.swagger.client.model.ProjectAdminPermission;
import io.swagger.client.model.ProjectSettingPermission;
import io.swagger.client.model.ReleasePermission;
import io.swagger.client.model.ReportPermission;
import io.swagger.client.model.RequirementPermission;
import io.swagger.client.model.SchedulePermission;
import io.swagger.client.model.SessionManagerPermission;
import io.swagger.client.model.TestCasePermission;
import io.swagger.client.model.TestCyclePermission;
import io.swagger.client.model.TestRunPermission;
import io.swagger.client.model.TestSuitePermission;

/**
 * UserProfile
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-03-04T15:34:58.501Z")
public class UserProfile {
  @SerializedName("reportPermission")
  private ReportPermission reportPermission = null;

  @SerializedName("user_id")
  private Long userId = null;

  @SerializedName("project_id")
  private Long projectId = null;

  @SerializedName("release")
  private ReleasePermission release = null;

  @SerializedName("build")
  private BuildPermission build = null;

  @SerializedName("module")
  private ModulePermission module = null;

  @SerializedName("requirement")
  private RequirementPermission requirement = null;

  @SerializedName("test_case")
  private TestCasePermission testCase = null;

  @SerializedName("test_cycle")
  private TestCyclePermission testCycle = null;

  @SerializedName("test_suite")
  private TestSuitePermission testSuite = null;

  @SerializedName("test_run")
  private TestRunPermission testRun = null;

  @SerializedName("defect")
  private DefectPermission defect = null;

  @SerializedName("project_setting")
  private ProjectSettingPermission projectSetting = null;

  @SerializedName("session")
  private SessionManagerPermission session = null;

  @SerializedName("project")
  private ProjectAdminPermission project = null;

  @SerializedName("schedule")
  private SchedulePermission schedule = null;

  public UserProfile reportPermission(ReportPermission reportPermission) {
    this.reportPermission = reportPermission;
    return this;
  }

   /**
   * Get reportPermission
   * @return reportPermission
  **/
  @ApiModelProperty(example = "null", value = "")
  public ReportPermission getReportPermission() {
    return reportPermission;
  }

  public void setReportPermission(ReportPermission reportPermission) {
    this.reportPermission = reportPermission;
  }

  public UserProfile userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * ID of the User
   * @return userId
  **/
  @ApiModelProperty(example = "1", value = "ID of the User")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }

  public UserProfile projectId(Long projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * ID of the Project
   * @return projectId
  **/
  @ApiModelProperty(example = "1", value = "ID of the Project")
  public Long getProjectId() {
    return projectId;
  }

  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }

  public UserProfile release(ReleasePermission release) {
    this.release = release;
    return this;
  }

   /**
   * Get release
   * @return release
  **/
  @ApiModelProperty(example = "null", value = "")
  public ReleasePermission getRelease() {
    return release;
  }

  public void setRelease(ReleasePermission release) {
    this.release = release;
  }

  public UserProfile build(BuildPermission build) {
    this.build = build;
    return this;
  }

   /**
   * Get build
   * @return build
  **/
  @ApiModelProperty(example = "null", value = "")
  public BuildPermission getBuild() {
    return build;
  }

  public void setBuild(BuildPermission build) {
    this.build = build;
  }

  public UserProfile module(ModulePermission module) {
    this.module = module;
    return this;
  }

   /**
   * Get module
   * @return module
  **/
  @ApiModelProperty(example = "null", value = "")
  public ModulePermission getModule() {
    return module;
  }

  public void setModule(ModulePermission module) {
    this.module = module;
  }

  public UserProfile requirement(RequirementPermission requirement) {
    this.requirement = requirement;
    return this;
  }

   /**
   * Get requirement
   * @return requirement
  **/
  @ApiModelProperty(example = "null", value = "")
  public RequirementPermission getRequirement() {
    return requirement;
  }

  public void setRequirement(RequirementPermission requirement) {
    this.requirement = requirement;
  }

  public UserProfile testCase(TestCasePermission testCase) {
    this.testCase = testCase;
    return this;
  }

   /**
   * Get testCase
   * @return testCase
  **/
  @ApiModelProperty(example = "null", value = "")
  public TestCasePermission getTestCase() {
    return testCase;
  }

  public void setTestCase(TestCasePermission testCase) {
    this.testCase = testCase;
  }

  public UserProfile testCycle(TestCyclePermission testCycle) {
    this.testCycle = testCycle;
    return this;
  }

   /**
   * Get testCycle
   * @return testCycle
  **/
  @ApiModelProperty(example = "null", value = "")
  public TestCyclePermission getTestCycle() {
    return testCycle;
  }

  public void setTestCycle(TestCyclePermission testCycle) {
    this.testCycle = testCycle;
  }

  public UserProfile testSuite(TestSuitePermission testSuite) {
    this.testSuite = testSuite;
    return this;
  }

   /**
   * Get testSuite
   * @return testSuite
  **/
  @ApiModelProperty(example = "null", value = "")
  public TestSuitePermission getTestSuite() {
    return testSuite;
  }

  public void setTestSuite(TestSuitePermission testSuite) {
    this.testSuite = testSuite;
  }

  public UserProfile testRun(TestRunPermission testRun) {
    this.testRun = testRun;
    return this;
  }

   /**
   * Get testRun
   * @return testRun
  **/
  @ApiModelProperty(example = "null", value = "")
  public TestRunPermission getTestRun() {
    return testRun;
  }

  public void setTestRun(TestRunPermission testRun) {
    this.testRun = testRun;
  }

  public UserProfile defect(DefectPermission defect) {
    this.defect = defect;
    return this;
  }

   /**
   * Get defect
   * @return defect
  **/
  @ApiModelProperty(example = "null", value = "")
  public DefectPermission getDefect() {
    return defect;
  }

  public void setDefect(DefectPermission defect) {
    this.defect = defect;
  }

  public UserProfile projectSetting(ProjectSettingPermission projectSetting) {
    this.projectSetting = projectSetting;
    return this;
  }

   /**
   * Get projectSetting
   * @return projectSetting
  **/
  @ApiModelProperty(example = "null", value = "")
  public ProjectSettingPermission getProjectSetting() {
    return projectSetting;
  }

  public void setProjectSetting(ProjectSettingPermission projectSetting) {
    this.projectSetting = projectSetting;
  }

  public UserProfile session(SessionManagerPermission session) {
    this.session = session;
    return this;
  }

   /**
   * Get session
   * @return session
  **/
  @ApiModelProperty(example = "null", value = "")
  public SessionManagerPermission getSession() {
    return session;
  }

  public void setSession(SessionManagerPermission session) {
    this.session = session;
  }

  public UserProfile project(ProjectAdminPermission project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(example = "null", value = "")
  public ProjectAdminPermission getProject() {
    return project;
  }

  public void setProject(ProjectAdminPermission project) {
    this.project = project;
  }

  public UserProfile schedule(SchedulePermission schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @ApiModelProperty(example = "null", value = "")
  public SchedulePermission getSchedule() {
    return schedule;
  }

  public void setSchedule(SchedulePermission schedule) {
    this.schedule = schedule;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserProfile userProfile = (UserProfile) o;
    return Objects.equals(this.reportPermission, userProfile.reportPermission) &&
        Objects.equals(this.userId, userProfile.userId) &&
        Objects.equals(this.projectId, userProfile.projectId) &&
        Objects.equals(this.release, userProfile.release) &&
        Objects.equals(this.build, userProfile.build) &&
        Objects.equals(this.module, userProfile.module) &&
        Objects.equals(this.requirement, userProfile.requirement) &&
        Objects.equals(this.testCase, userProfile.testCase) &&
        Objects.equals(this.testCycle, userProfile.testCycle) &&
        Objects.equals(this.testSuite, userProfile.testSuite) &&
        Objects.equals(this.testRun, userProfile.testRun) &&
        Objects.equals(this.defect, userProfile.defect) &&
        Objects.equals(this.projectSetting, userProfile.projectSetting) &&
        Objects.equals(this.session, userProfile.session) &&
        Objects.equals(this.project, userProfile.project) &&
        Objects.equals(this.schedule, userProfile.schedule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportPermission, userId, projectId, release, build, module, requirement, testCase, testCycle, testSuite, testRun, defect, projectSetting, session, project, schedule);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserProfile {\n");
    
    sb.append("    reportPermission: ").append(toIndentedString(reportPermission)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    release: ").append(toIndentedString(release)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    module: ").append(toIndentedString(module)).append("\n");
    sb.append("    requirement: ").append(toIndentedString(requirement)).append("\n");
    sb.append("    testCase: ").append(toIndentedString(testCase)).append("\n");
    sb.append("    testCycle: ").append(toIndentedString(testCycle)).append("\n");
    sb.append("    testSuite: ").append(toIndentedString(testSuite)).append("\n");
    sb.append("    testRun: ").append(toIndentedString(testRun)).append("\n");
    sb.append("    defect: ").append(toIndentedString(defect)).append("\n");
    sb.append("    projectSetting: ").append(toIndentedString(projectSetting)).append("\n");
    sb.append("    session: ").append(toIndentedString(session)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

