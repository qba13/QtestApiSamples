/*
 * qTest Manager API Version 8.6 - 10.5
 * qTest Manager API Version 8.6 - 10.5
 *
 * OpenAPI spec version: 8.6 - 10.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Defect;

/**
 * TestCaseResultDefect
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-03-04T15:34:58.501Z")
public class TestCaseResultDefect {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("clientId")
  private Long clientId = null;

  @SerializedName("projectId")
  private Long projectId = null;

  @SerializedName("resultId")
  private Long resultId = null;

  @SerializedName("defectId")
  private Long defectId = null;

  @SerializedName("externalIssueId")
  private String externalIssueId = null;

  @SerializedName("externalIssueUniqueId")
  private String externalIssueUniqueId = null;

  @SerializedName("externalIssueStatus")
  private String externalIssueStatus = null;

  @SerializedName("externalIssueResolution")
  private String externalIssueResolution = null;

  @SerializedName("externalIssueType")
  private String externalIssueType = null;

  @SerializedName("externalIssueSummary")
  private String externalIssueSummary = null;

  @SerializedName("externalIssueUrl")
  private String externalIssueUrl = null;

  @SerializedName("integrationConnectionId")
  private Long integrationConnectionId = null;

  @SerializedName("externalProjectId")
  private String externalProjectId = null;

  @SerializedName("resultType")
  private Long resultType = null;

  @SerializedName("defect")
  private Defect defect = null;

  @SerializedName("testCaseId")
  private Long testCaseId = null;

  @SerializedName("testCaseRunId")
  private Long testCaseRunId = null;

  @SerializedName("testCaseVersionId")
  private Long testCaseVersionId = null;

  @SerializedName("deleted")
  private Boolean deleted = false;

  @SerializedName("internalDefect")
  private Boolean internalDefect = false;

  @SerializedName("longId")
  private Long longId = null;

  public TestCaseResultDefect id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public TestCaseResultDefect clientId(Long clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getClientId() {
    return clientId;
  }

  public void setClientId(Long clientId) {
    this.clientId = clientId;
  }

  public TestCaseResultDefect projectId(Long projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getProjectId() {
    return projectId;
  }

  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }

  public TestCaseResultDefect resultId(Long resultId) {
    this.resultId = resultId;
    return this;
  }

   /**
   * Get resultId
   * @return resultId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getResultId() {
    return resultId;
  }

  public void setResultId(Long resultId) {
    this.resultId = resultId;
  }

  public TestCaseResultDefect defectId(Long defectId) {
    this.defectId = defectId;
    return this;
  }

   /**
   * Get defectId
   * @return defectId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getDefectId() {
    return defectId;
  }

  public void setDefectId(Long defectId) {
    this.defectId = defectId;
  }

  public TestCaseResultDefect externalIssueId(String externalIssueId) {
    this.externalIssueId = externalIssueId;
    return this;
  }

   /**
   * Get externalIssueId
   * @return externalIssueId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getExternalIssueId() {
    return externalIssueId;
  }

  public void setExternalIssueId(String externalIssueId) {
    this.externalIssueId = externalIssueId;
  }

  public TestCaseResultDefect externalIssueUniqueId(String externalIssueUniqueId) {
    this.externalIssueUniqueId = externalIssueUniqueId;
    return this;
  }

   /**
   * Get externalIssueUniqueId
   * @return externalIssueUniqueId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getExternalIssueUniqueId() {
    return externalIssueUniqueId;
  }

  public void setExternalIssueUniqueId(String externalIssueUniqueId) {
    this.externalIssueUniqueId = externalIssueUniqueId;
  }

  public TestCaseResultDefect externalIssueStatus(String externalIssueStatus) {
    this.externalIssueStatus = externalIssueStatus;
    return this;
  }

   /**
   * Get externalIssueStatus
   * @return externalIssueStatus
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getExternalIssueStatus() {
    return externalIssueStatus;
  }

  public void setExternalIssueStatus(String externalIssueStatus) {
    this.externalIssueStatus = externalIssueStatus;
  }

  public TestCaseResultDefect externalIssueResolution(String externalIssueResolution) {
    this.externalIssueResolution = externalIssueResolution;
    return this;
  }

   /**
   * Get externalIssueResolution
   * @return externalIssueResolution
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getExternalIssueResolution() {
    return externalIssueResolution;
  }

  public void setExternalIssueResolution(String externalIssueResolution) {
    this.externalIssueResolution = externalIssueResolution;
  }

  public TestCaseResultDefect externalIssueType(String externalIssueType) {
    this.externalIssueType = externalIssueType;
    return this;
  }

   /**
   * Get externalIssueType
   * @return externalIssueType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getExternalIssueType() {
    return externalIssueType;
  }

  public void setExternalIssueType(String externalIssueType) {
    this.externalIssueType = externalIssueType;
  }

  public TestCaseResultDefect externalIssueSummary(String externalIssueSummary) {
    this.externalIssueSummary = externalIssueSummary;
    return this;
  }

   /**
   * Get externalIssueSummary
   * @return externalIssueSummary
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getExternalIssueSummary() {
    return externalIssueSummary;
  }

  public void setExternalIssueSummary(String externalIssueSummary) {
    this.externalIssueSummary = externalIssueSummary;
  }

  public TestCaseResultDefect externalIssueUrl(String externalIssueUrl) {
    this.externalIssueUrl = externalIssueUrl;
    return this;
  }

   /**
   * Get externalIssueUrl
   * @return externalIssueUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getExternalIssueUrl() {
    return externalIssueUrl;
  }

  public void setExternalIssueUrl(String externalIssueUrl) {
    this.externalIssueUrl = externalIssueUrl;
  }

  public TestCaseResultDefect integrationConnectionId(Long integrationConnectionId) {
    this.integrationConnectionId = integrationConnectionId;
    return this;
  }

   /**
   * Get integrationConnectionId
   * @return integrationConnectionId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getIntegrationConnectionId() {
    return integrationConnectionId;
  }

  public void setIntegrationConnectionId(Long integrationConnectionId) {
    this.integrationConnectionId = integrationConnectionId;
  }

  public TestCaseResultDefect externalProjectId(String externalProjectId) {
    this.externalProjectId = externalProjectId;
    return this;
  }

   /**
   * Get externalProjectId
   * @return externalProjectId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getExternalProjectId() {
    return externalProjectId;
  }

  public void setExternalProjectId(String externalProjectId) {
    this.externalProjectId = externalProjectId;
  }

  public TestCaseResultDefect resultType(Long resultType) {
    this.resultType = resultType;
    return this;
  }

   /**
   * Get resultType
   * @return resultType
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getResultType() {
    return resultType;
  }

  public void setResultType(Long resultType) {
    this.resultType = resultType;
  }

  public TestCaseResultDefect defect(Defect defect) {
    this.defect = defect;
    return this;
  }

   /**
   * Get defect
   * @return defect
  **/
  @ApiModelProperty(example = "null", value = "")
  public Defect getDefect() {
    return defect;
  }

  public void setDefect(Defect defect) {
    this.defect = defect;
  }

  public TestCaseResultDefect testCaseId(Long testCaseId) {
    this.testCaseId = testCaseId;
    return this;
  }

   /**
   * Get testCaseId
   * @return testCaseId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTestCaseId() {
    return testCaseId;
  }

  public void setTestCaseId(Long testCaseId) {
    this.testCaseId = testCaseId;
  }

  public TestCaseResultDefect testCaseRunId(Long testCaseRunId) {
    this.testCaseRunId = testCaseRunId;
    return this;
  }

   /**
   * Get testCaseRunId
   * @return testCaseRunId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTestCaseRunId() {
    return testCaseRunId;
  }

  public void setTestCaseRunId(Long testCaseRunId) {
    this.testCaseRunId = testCaseRunId;
  }

  public TestCaseResultDefect testCaseVersionId(Long testCaseVersionId) {
    this.testCaseVersionId = testCaseVersionId;
    return this;
  }

   /**
   * Get testCaseVersionId
   * @return testCaseVersionId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTestCaseVersionId() {
    return testCaseVersionId;
  }

  public void setTestCaseVersionId(Long testCaseVersionId) {
    this.testCaseVersionId = testCaseVersionId;
  }

  public TestCaseResultDefect deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public TestCaseResultDefect internalDefect(Boolean internalDefect) {
    this.internalDefect = internalDefect;
    return this;
  }

   /**
   * Get internalDefect
   * @return internalDefect
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getInternalDefect() {
    return internalDefect;
  }

  public void setInternalDefect(Boolean internalDefect) {
    this.internalDefect = internalDefect;
  }

  public TestCaseResultDefect longId(Long longId) {
    this.longId = longId;
    return this;
  }

   /**
   * Get longId
   * @return longId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getLongId() {
    return longId;
  }

  public void setLongId(Long longId) {
    this.longId = longId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestCaseResultDefect testCaseResultDefect = (TestCaseResultDefect) o;
    return Objects.equals(this.id, testCaseResultDefect.id) &&
        Objects.equals(this.clientId, testCaseResultDefect.clientId) &&
        Objects.equals(this.projectId, testCaseResultDefect.projectId) &&
        Objects.equals(this.resultId, testCaseResultDefect.resultId) &&
        Objects.equals(this.defectId, testCaseResultDefect.defectId) &&
        Objects.equals(this.externalIssueId, testCaseResultDefect.externalIssueId) &&
        Objects.equals(this.externalIssueUniqueId, testCaseResultDefect.externalIssueUniqueId) &&
        Objects.equals(this.externalIssueStatus, testCaseResultDefect.externalIssueStatus) &&
        Objects.equals(this.externalIssueResolution, testCaseResultDefect.externalIssueResolution) &&
        Objects.equals(this.externalIssueType, testCaseResultDefect.externalIssueType) &&
        Objects.equals(this.externalIssueSummary, testCaseResultDefect.externalIssueSummary) &&
        Objects.equals(this.externalIssueUrl, testCaseResultDefect.externalIssueUrl) &&
        Objects.equals(this.integrationConnectionId, testCaseResultDefect.integrationConnectionId) &&
        Objects.equals(this.externalProjectId, testCaseResultDefect.externalProjectId) &&
        Objects.equals(this.resultType, testCaseResultDefect.resultType) &&
        Objects.equals(this.defect, testCaseResultDefect.defect) &&
        Objects.equals(this.testCaseId, testCaseResultDefect.testCaseId) &&
        Objects.equals(this.testCaseRunId, testCaseResultDefect.testCaseRunId) &&
        Objects.equals(this.testCaseVersionId, testCaseResultDefect.testCaseVersionId) &&
        Objects.equals(this.deleted, testCaseResultDefect.deleted) &&
        Objects.equals(this.internalDefect, testCaseResultDefect.internalDefect) &&
        Objects.equals(this.longId, testCaseResultDefect.longId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, clientId, projectId, resultId, defectId, externalIssueId, externalIssueUniqueId, externalIssueStatus, externalIssueResolution, externalIssueType, externalIssueSummary, externalIssueUrl, integrationConnectionId, externalProjectId, resultType, defect, testCaseId, testCaseRunId, testCaseVersionId, deleted, internalDefect, longId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestCaseResultDefect {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    resultId: ").append(toIndentedString(resultId)).append("\n");
    sb.append("    defectId: ").append(toIndentedString(defectId)).append("\n");
    sb.append("    externalIssueId: ").append(toIndentedString(externalIssueId)).append("\n");
    sb.append("    externalIssueUniqueId: ").append(toIndentedString(externalIssueUniqueId)).append("\n");
    sb.append("    externalIssueStatus: ").append(toIndentedString(externalIssueStatus)).append("\n");
    sb.append("    externalIssueResolution: ").append(toIndentedString(externalIssueResolution)).append("\n");
    sb.append("    externalIssueType: ").append(toIndentedString(externalIssueType)).append("\n");
    sb.append("    externalIssueSummary: ").append(toIndentedString(externalIssueSummary)).append("\n");
    sb.append("    externalIssueUrl: ").append(toIndentedString(externalIssueUrl)).append("\n");
    sb.append("    integrationConnectionId: ").append(toIndentedString(integrationConnectionId)).append("\n");
    sb.append("    externalProjectId: ").append(toIndentedString(externalProjectId)).append("\n");
    sb.append("    resultType: ").append(toIndentedString(resultType)).append("\n");
    sb.append("    defect: ").append(toIndentedString(defect)).append("\n");
    sb.append("    testCaseId: ").append(toIndentedString(testCaseId)).append("\n");
    sb.append("    testCaseRunId: ").append(toIndentedString(testCaseRunId)).append("\n");
    sb.append("    testCaseVersionId: ").append(toIndentedString(testCaseVersionId)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    internalDefect: ").append(toIndentedString(internalDefect)).append("\n");
    sb.append("    longId: ").append(toIndentedString(longId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

