/*
 * qTest Manager API Version 8.6 - 10.5
 * qTest Manager API Version 8.6 - 10.5
 *
 * OpenAPI spec version: 8.6 - 10.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AttachmentResource;
import io.swagger.client.model.Message;
import io.swagger.client.model.OutputStream;
import io.swagger.client.model.PagedResourceAttachmentResource;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AttachmentApi
 */
@Ignore
public class AttachmentApiTest {

    private final AttachmentApi api = new AttachmentApi();

    
    /**
     * Deletes an Attachment from an Object
     *
     * To delete an Attachment from a Release, Build, Requirement, Test Case, Test Log, Test Step, Test Step Log or Defect  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 7.5+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteByBlobHandleIdTest() throws ApiException {
        Long projectId = null;
        Long blobHandleId = null;
        String objectType = null;
        Long objectId = null;
        Message response = api.deleteByBlobHandleId(projectId, blobHandleId, objectType, objectId);

        // TODO: test validations
    }
    
    /**
     * Gets an Attachment of an Object
     *
     * To retrieve an Attachment from a Release, Build, Requirement, Test Case, Test Log, Test Step, Test Step Log or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAttachmentTest() throws ApiException {
        Long projectId = null;
        Long attachmentId = null;
        String objectType = null;
        Long objectId = null;
        String forceDownload = null;
        OutputStream response = api.getAttachment(projectId, attachmentId, objectType, objectId, forceDownload);

        // TODO: test validations
    }
    
    /**
     * Gets all Attachments of an Object
     *
     * To retrieve all Attachments of a Release, Build, Requirement, Test Case, Test Log, Test Step, Test Step Log or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAttachmentsOfTest() throws ApiException {
        Long projectId = null;
        String objectType = null;
        Long objectId = null;
        List<AttachmentResource> response = api.getAttachmentsOf(projectId, objectType, objectId);

        // TODO: test validations
    }
    
    /**
     * Searches for Attachments
     *
     * To query for attachments of &lt;em&gt;Releases&lt;/em&gt;, &lt;em&gt;Builds&lt;/em&gt;, &lt;em&gt;Requirements&lt;/em&gt;, &lt;em&gt;Test Cases&lt;/em&gt;, &lt;em&gt;Test Logs&lt;/em&gt;, &lt;em&gt;Test Steps&lt;/em&gt; or &lt;em&gt;Defects&lt;/em&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchTest() throws ApiException {
        Long projectId = null;
        String type = null;
        List<Long> ids = null;
        Long author = null;
        String createdDate = null;
        Long pageSize = null;
        Long page = null;
        PagedResourceAttachmentResource response = api.search(projectId, type, ids, author, createdDate, pageSize, page);

        // TODO: test validations
    }
    
    /**
     * Uploads an Attachment to an Object
     *
     * To upload an Attachment to a Release, Build, Requirement, Test Case, Test Log, Test Step, Test Step Log or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadTest() throws ApiException {
        Long projectId = null;
        String objectType = null;
        Long objectId = null;
        String fileName = null;
        String contentType = null;
        byte[] body = null;
        AttachmentResource response = api.upload(projectId, objectType, objectId, fileName, contentType, body);

        // TODO: test validations
    }
    
}
