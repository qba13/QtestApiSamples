/*
 * qTest Manager API Version 8.6 - 10.5
 * qTest Manager API Version 8.6 - 10.5
 *
 * OpenAPI spec version: 8.6 - 10.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AssignedProject;
import io.swagger.client.model.AssignedUsersProject;
import io.swagger.client.model.LoggedUser;
import io.swagger.client.model.Message;
import io.swagger.client.model.OutputStream;
import io.swagger.client.model.ProjectWithUserIdsObject;
import io.swagger.client.model.SearchUserResourceExtensionResponse;
import io.swagger.client.model.SearchUserResponse;
import io.swagger.client.model.UserResource;
import io.swagger.client.model.UserUpdateResource;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    
    /**
     * Assigns a User to a Project
     *
     * To assign a User to a Project
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void assignToProjectTest() throws ApiException {
        Long userId = null;
        AssignedProject body = null;
        AssignedProject response = api.assignToProject(userId, body);

        // TODO: test validations
    }
    
    /**
     * Assigns multiple Users to a Project
     *
     * To assign a list of Users to a Project  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 4+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void assignUsersToProjectTest() throws ApiException {
        AssignedUsersProject body = null;
        AssignedUsersProject response = api.assignUsersToProject(body);

        // TODO: test validations
    }
    
    /**
     * Invites a User
     *
     * To invite a user to your qTest Manager instance and activate the account. If the password is omitted, the default \&quot;&lt;em&gt;admin123&lt;/em&gt;\&quot; will be used  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 4+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        UserResource body = null;
        UserResource response = api.createUser(body);

        // TODO: test validations
    }
    
    /**
     * Queries Users by Username
     *
     * To query for users by their username  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 8.4.2+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findByUserNameOrEmailTest() throws ApiException {
        String username = null;
        Boolean includeInactiveUsers = null;
        Boolean pagination = null;
        Long page = null;
        Long pageSize = null;
        SearchUserResourceExtensionResponse response = api.findByUserNameOrEmail(username, includeInactiveUsers, pagination, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * Queries Users by Project Name
     *
     * To query for users by names of their assigned projects  - Admin users with &lt;em&gt;Manage Client Users&lt;/em&gt; permission can query users in any projects  - For other users: the API only returns users within projects to which the requesting user is assigned
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findUsersByProjectsNameTest() throws ApiException {
        String projectName = null;
        Boolean inactive = null;
        Boolean pagination = null;
        Long page = null;
        Long pageSize = null;
        SearchUserResponse response = api.findUsersByProjectsName(projectName, inactive, pagination, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * Gets a User&#39;s Avatar
     *
     * To retrieve a User&#39;s Avatar
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAvatarTest() throws ApiException {
        Long userId = null;
        OutputStream response = api.getAvatar(userId);

        // TODO: test validations
    }
    
    /**
     * Gets a User
     *
     * To retrieve a User&#39;s information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserByIdTest() throws ApiException {
        Long userId = null;
        UserResource response = api.getUserById(userId);

        // TODO: test validations
    }
    
    /**
     * Gets current user&#39;s information
     *
     * To retrieve your information such as username, email, first name, and last name
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reevaluateTokenTest() throws ApiException {
        Boolean includeInaccessibleApps = null;
        LoggedUser response = api.reevaluateToken(includeInaccessibleApps);

        // TODO: test validations
    }
    
    /**
     * Remove association between users and projects
     *
     * To remove association between users and projects
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeAssociationUsersAndProjectsTest() throws ApiException {
        List<ProjectWithUserIdsObject> body = null;
        Message response = api.removeAssociationUsersAndProjects(body);

        // TODO: test validations
    }
    
    /**
     * Update user&#39;s information
     *
     * To update information of a user, like : recovery email, password, status...
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        Long userId = null;
        UserUpdateResource body = null;
        UserResource response = api.updateUser(userId, body);

        // TODO: test validations
    }
    
}
