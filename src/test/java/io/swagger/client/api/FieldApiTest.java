/*
 * qTest Manager API Version 8.6 - 10.5
 * qTest Manager API Version 8.6 - 10.5
 *
 * OpenAPI spec version: 8.6 - 10.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AllowedValueInputResource;
import io.swagger.client.model.AllowedValueResource;
import io.swagger.client.model.AllowedValueResponseResource;
import io.swagger.client.model.FieldInputResource;
import io.swagger.client.model.FieldResource;
import io.swagger.client.model.ResourceSupport;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FieldApi
 */
@Ignore
public class FieldApiTest {

    private final FieldApi api = new FieldApi();

    
    /**
     * Creates a Custom Field of an Object Type
     *
     * To create a new custom Field for Release, Build, Requirement, Test Case, Test Suite, Test Run, or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCustomFieldTest() throws ApiException {
        Long projectId = null;
        FieldResource body = null;
        String objectType = null;
        FieldResource response = api.createCustomField(projectId, body, objectType);

        // TODO: test validations
    }
    
    /**
     * Creates a Custom Site Field of an Object Type
     *
     * To create a new Site Field for Release, Build, Requirement, Test Case, Test Suite, Test Run, or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCustomSiteFieldTest() throws ApiException {
        String objectType = null;
        FieldInputResource body = null;
        FieldResource response = api.createCustomSiteField(objectType, body);

        // TODO: test validations
    }
    
    /**
     * Creates allowed values of a Project Field
     *
     * Creates maximum 100 allowed values of a Project Field with Combo box/Multi selection combo box/Check box data type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createProjectFieldAllowedValuesTest() throws ApiException {
        Long projectId = null;
        String objectType = null;
        Long fieldId = null;
        List<AllowedValueResource> body = null;
        AllowedValueResponseResource response = api.createProjectFieldAllowedValues(projectId, objectType, fieldId, body);

        // TODO: test validations
    }
    
    /**
     * Creates allowed values of a Site Field
     *
     * Creates maximum 100 allowed values of a Site Field with Combo box/Multi selection combo box/Check box data type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSiteFieldAllowedValuesTest() throws ApiException {
        String objectType = null;
        Long fieldId = null;
        List<AllowedValueResource> body = null;
        AllowedValueResponseResource response = api.createSiteFieldAllowedValues(objectType, fieldId, body);

        // TODO: test validations
    }
    
    /**
     * Deletes a Custom Field of an Object Type
     *
     * To delete a custom field (at project level) for Release, Build, Requirement, Test Case, Test Suite, Test Run, or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomFieldTest() throws ApiException {
        Long projectId = null;
        String objectType = null;
        Long fieldId = null;
        Object response = api.deleteCustomField(projectId, objectType, fieldId);

        // TODO: test validations
    }
    
    /**
     * Deletes a Custom Site Field of an Object Type
     *
     * To delete a custom field (at site level) for Release, Build, Requirement, Test Case, Test Suite, Test Run, or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomSiteFieldTest() throws ApiException {
        String objectType = null;
        Long fieldId = null;
        Object response = api.deleteCustomSiteField(objectType, fieldId);

        // TODO: test validations
    }
    
    /**
     * Deletes an allowed value of a Project Field
     *
     * To delete an allowed value of a Field (at project level) with Combo box/Multi selection combo box/Check box data type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProjectFieldValueTest() throws ApiException {
        Long projectId = null;
        String objectType = null;
        Long fieldId = null;
        Long value = null;
        Object response = api.deleteProjectFieldValue(projectId, objectType, fieldId, value);

        // TODO: test validations
    }
    
    /**
     * Deletes an allowed value of a Site Field
     *
     * To delete an allowed value of a Site Field with Combo box/Multi selection combo box/Check box data type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSiteFieldValueTest() throws ApiException {
        String objectType = null;
        Long fieldId = null;
        Long value = null;
        Object response = api.deleteSiteFieldValue(objectType, fieldId, value);

        // TODO: test validations
    }
    
    /**
     * Gets all site field of an object type
     *
     * To get all fields (at site level) for Release, Build, Requirement, Test Case, Test Suite, Test Run, or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllSiteFieldsTest() throws ApiException {
        String objectType = null;
        Long page = null;
        Long pageSize = null;
        List<FieldResource> response = api.getAllSiteFields(objectType, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * Gets a Custom Field of an Object Type
     *
     * To get a custom field (at project level) for Release, Build, Requirement, Test Case, Test Suite, Test Run, or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomFieldTest() throws ApiException {
        Long projectId = null;
        String objectType = null;
        Long fieldId = null;
        FieldResource response = api.getCustomField(projectId, objectType, fieldId);

        // TODO: test validations
    }
    
    /**
     * Gets a Custom Site Field of an Object Type
     *
     * To get a custom field (at site level) for Release, Build, Requirement, Test Case, Test Suite, Test Run, or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomSiteFieldTest() throws ApiException {
        String objectType = null;
        Long fieldId = null;
        FieldResource response = api.getCustomSiteField(objectType, fieldId);

        // TODO: test validations
    }
    
    /**
     * Gets all Fields of an Object Type
     *
     * To retrieve Fields of an Object Type  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 4+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFieldsTest() throws ApiException {
        Long projectId = null;
        String objectType = null;
        Boolean includeInactive = null;
        List<FieldResource> response = api.getFields(projectId, objectType, includeInactive);

        // TODO: test validations
    }
    
    /**
     * Gets all allowed values of a Project Field
     *
     * To get all allowed values of a Project Field with Combo box/Multi selection combo box/Check box/User list data type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProjectFieldAllowedValuesTest() throws ApiException {
        Long projectId = null;
        String objectType = null;
        Long fieldId = null;
        Long page = null;
        Long pageSize = null;
        List<AllowedValueResource> response = api.getProjectFieldAllowedValues(projectId, objectType, fieldId, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * Gets all allowed values of a Site Field
     *
     * To get all allowed values of a Site Field with Combo box/Multi selection combo box/Check box/User list data type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSiteFieldAllowedValuesTest() throws ApiException {
        String objectType = null;
        Long fieldId = null;
        Long page = null;
        Long pageSize = null;
        List<AllowedValueResource> response = api.getSiteFieldAllowedValues(objectType, fieldId, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * Updates a Custom Field of an Object Type
     *
     * To update a custom field (at project level) for Release, Build, Requirement, Test Case, Test Suite, Test Run, or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCustomFieldTest() throws ApiException {
        Long projectId = null;
        String objectType = null;
        Long fieldId = null;
        FieldInputResource body = null;
        FieldResource response = api.updateCustomField(projectId, objectType, fieldId, body);

        // TODO: test validations
    }
    
    /**
     * Updates a Custom Site Field of an Object Type
     *
     * To update a custom field (at site level) for Release, Build, Requirement, Test Case, Test Suite, Test Run, or Defect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCustomSiteFieldTest() throws ApiException {
        String objectType = null;
        Long fieldId = null;
        FieldInputResource body = null;
        FieldResource response = api.updateCustomSiteField(objectType, fieldId, body);

        // TODO: test validations
    }
    
    /**
     * Updates an allowed value of a Project Field
     *
     * Update allowed values of a Project Field with Combo box/Multi selection combo box/Check box data type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProjectFieldAllowedValuesTest() throws ApiException {
        Long projectId = null;
        String objectType = null;
        Long fieldId = null;
        Long value = null;
        AllowedValueInputResource body = null;
        Object response = api.updateProjectFieldAllowedValues(projectId, objectType, fieldId, value, body);

        // TODO: test validations
    }
    
    /**
     * Updates an allowed value of a Site Field
     *
     * Update allowed values of a Site Field with Combo box/Multi selection combo box/Check box data type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSiteFieldAllowedValuesTest() throws ApiException {
        String objectType = null;
        Long fieldId = null;
        Long value = null;
        AllowedValueInputResource body = null;
        ResourceSupport response = api.updateSiteFieldAllowedValues(objectType, fieldId, value, body);

        // TODO: test validations
    }
    
}
