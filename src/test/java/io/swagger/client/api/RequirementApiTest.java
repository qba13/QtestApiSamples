/*
 * qTest Manager API Version 8.6 - 10.5
 * qTest Manager API Version 8.6 - 10.5
 *
 * OpenAPI spec version: 8.6 - 10.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CommentResource;
import io.swagger.client.model.PagedResourceCommentResource;
import io.swagger.client.model.RequirementResource;
import io.swagger.client.model.TraceabilityRequirement;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RequirementApi
 */
@Ignore
public class RequirementApiTest {

    private final RequirementApi api = new RequirementApi();

    
    /**
     * Adds a Comment to a Requirement
     *
     * To add a comment to a Requirement  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 7.5+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addRequirementCommentTest() throws ApiException {
        Long projectId = null;
        String idOrKey = null;
        CommentResource body = null;
        CommentResource response = api.addRequirementComment(projectId, idOrKey, body);

        // TODO: test validations
    }
    
    /**
     * Creates a Requirement
     *
     * To create a new Requirement  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 4+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRequirementTest() throws ApiException {
        Long projectId = null;
        RequirementResource body = null;
        Long parentId = null;
        RequirementResource response = api.createRequirement(projectId, body, parentId);

        // TODO: test validations
    }
    
    /**
     * Deletes a Requirement
     *
     * To delete a Requirement  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 6+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRequirementByIdTest() throws ApiException {
        Long projectId = null;
        Long requirementId = null;
        Object response = api.deleteRequirementById(projectId, requirementId);

        // TODO: test validations
    }
    
    /**
     * Deletes a Comment of a Requirement
     *
     * To delete a comment of a Requirement  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 7.5+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRequirementCommentByIdTest() throws ApiException {
        Long projectId = null;
        String idOrKey = null;
        Long commentId = null;
        Object response = api.deleteRequirementCommentById(projectId, idOrKey, commentId);

        // TODO: test validations
    }
    
    /**
     * Gets all Comments of a Requirement
     *
     * To retrieve all comments of a Requirement  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 7.6+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllRequirementCommentsTest() throws ApiException {
        Long projectId = null;
        String idOrKey = null;
        PagedResourceCommentResource response = api.getAllRequirementComments(projectId, idOrKey);

        // TODO: test validations
    }
    
    /**
     * Gets Requirement Traceability Matrix Report
     *
     * To retrieve a report of Requirements with their covering Test Cases
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPublicTraceabilityMatrixReportTest() throws ApiException {
        Long projectId = null;
        Long page = null;
        Integer size = null;
        String fieldIds = null;
        List<TraceabilityRequirement> response = api.getPublicTraceabilityMatrixReport(projectId, page, size, fieldIds);

        // TODO: test validations
    }
    
    /**
     * Gets a Requirement
     *
     * To retrieve a Requirement  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 6+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRequirementTest() throws ApiException {
        Long projectId = null;
        Long requirementId = null;
        Boolean includeExternalProperties = null;
        RequirementResource response = api.getRequirement(projectId, requirementId, includeExternalProperties);

        // TODO: test validations
    }
    
    /**
     * Gets a Comment of a Requirement
     *
     * To retrieve a comment of a Requirement  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 7.5+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRequirementCommentByIdTest() throws ApiException {
        Long projectId = null;
        String idOrKey = null;
        Long commentId = null;
        CommentResource response = api.getRequirementCommentById(projectId, idOrKey, commentId);

        // TODO: test validations
    }
    
    /**
     * Gets multiple Requirements
     *
     * To retrieve all Requirements or Requirements under a specific Module
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRequirementsTest() throws ApiException {
        Long projectId = null;
        Long parentId = null;
        Long page = null;
        Integer size = null;
        Boolean includeExternalProperties = null;
        List<RequirementResource> response = api.getRequirements(projectId, parentId, page, size, includeExternalProperties);

        // TODO: test validations
    }
    
    /**
     * Updates a Requirement
     *
     * To update properties of an Requirement or to move it to other parent Module
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRequirementTest() throws ApiException {
        Long projectId = null;
        Long requirementId = null;
        RequirementResource body = null;
        Long parentId = null;
        RequirementResource response = api.updateRequirement(projectId, requirementId, body, parentId);

        // TODO: test validations
    }
    
    /**
     * Updates a Comment of a Requirement
     *
     * To modify a comment of a Requirement  &lt;strong&gt;qTest Manager version:&lt;/strong&gt; 7.5+
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRequirementCommentByIdTest() throws ApiException {
        Long projectId = null;
        String idOrKey = null;
        Long commentId = null;
        CommentResource body = null;
        CommentResource response = api.updateRequirementCommentById(projectId, idOrKey, commentId, body);

        // TODO: test validations
    }
    
}
