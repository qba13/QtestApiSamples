/*
 * qTest Manager API Version 8.6 - 10.5
 * qTest Manager API Version 8.6 - 10.5
 *
 * OpenAPI spec version: 8.6 - 10.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.WebhookRequest;
import io.swagger.client.model.WebhookVM;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhookApi
 */
@Ignore
public class WebhookApiTest {

    private final WebhookApi api = new WebhookApi();

    
    /**
     * Registers a webhook
     *
     * To register a webhook
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createWebhookTest() throws ApiException {
        WebhookRequest body = null;
        WebhookVM response = api.createWebhook(body);

        // TODO: test validations
    }
    
    /**
     * Deletes a webhook
     *
     * To delete a registered webhook
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteWebhookByIdTest() throws ApiException {
        String webhookId = null;
        Object response = api.deleteWebhookById(webhookId);

        // TODO: test validations
    }
    
    /**
     * Get list of webhook event names
     *
     * To retrieve list of all available event names for webhook registering
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllEventNamesTest() throws ApiException {
        List<String> response = api.getAllEventNames();

        // TODO: test validations
    }
    
    /**
     * Gets list of all registered webhooks
     *
     * To retrieve list of all registered webhooks
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllWebhooksTest() throws ApiException {
        List<WebhookVM> response = api.getAllWebhooks();

        // TODO: test validations
    }
    
    /**
     * Gets a webhook
     *
     * To retrieve details of a registered webhook
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWebhookByIdTest() throws ApiException {
        String webhookId = null;
        WebhookVM response = api.getWebhookById(webhookId);

        // TODO: test validations
    }
    
    /**
     * Updates a webhook
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateWebhookTest() throws ApiException {
        String webhookId = null;
        WebhookRequest body = null;
        WebhookVM response = api.updateWebhook(webhookId, body);

        // TODO: test validations
    }
    
}
